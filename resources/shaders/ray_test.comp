#version 450

// #include "voxel.glsl"

layout (local_size_x = 16, local_size_y = 16) in;
// layout (set = 1, binding = 0, rgba8) uniform readonly image2D inputImage;
layout (set = 0, binding = 0, rgba8) uniform writeonly image2D resultImage;


 
void main() {
	ivec2 dim = imageSize(resultImage);
	vec2 uv = vec2(gl_GlobalInvocationID.xy) / dim;

	// vec3 rayO = ubo.camera.pos;
	// vec3 rayD = normalize(vec3((-1.0 + 2.0 * uv) * vec2(ubo.aspectRatio, 1.0), -1.0));

	// imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), vec4(1.0, 1.0, 0.0, 0.0));
	imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), vec4(uv, 0.0, 0.0));
}
